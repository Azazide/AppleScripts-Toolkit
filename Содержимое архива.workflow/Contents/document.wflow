<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>526</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>1.0.2</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.applescript.object</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run AppleScript.action</string>
				<key>ActionName</key>
				<string>Запустить AppleScript</string>
				<key>ActionParameters</key>
				<dict>
					<key>source</key>
					<string>on run {input, parameters}
    -- Проверяем, является ли файл архивом
    set archivePath to POSIX path of (item 1 of input)
    if not (archivePath ends with ".zip" or archivePath ends with ".tar" or archivePath ends with ".tar.gz" or archivePath ends with ".tgz" or archivePath ends with ".rar") then
        display dialog "Выбранный файл не является поддерживаемым архивом." buttons {"OK"} default button 1
        return input
    end if

    -- Создаем временную папку для распаковки
    set tempDir to (POSIX path of (do shell script "mktemp -d /tmp/archive_preview.XXXX"))
    
    -- Распаковываем архив
    try
        do shell script "unzip -q " &amp; quoted form of archivePath &amp; " -d " &amp; quoted form of tempDir &amp; " || tar -xf " &amp; quoted form of archivePath &amp; " -C " &amp; quoted form of tempDir &amp; " || unrar x " &amp; quoted form of archivePath &amp; " " &amp; quoted form of tempDir
    on error errMsg
        display dialog "Ошибка распаковки архива: " &amp; errMsg buttons {"OK"} default button 1
        return input
    end try

    -- Открываем временную папку в Finder
    tell application "Finder"
        set tempFolder to (POSIX file tempDir as alias)
        open tempFolder
        activate
        
        -- Устанавливаем вид на "Список"
        set current view of Finder window 1 to list view
    end tell

    -- Постоянно следим за видом окна
    repeat
        delay 1
        try
            tell application "Finder"
                if current view of Finder window 1 is not list view then
                    set current view of Finder window 1 to list view
                end if
            end tell
        on error
            exit repeat
        end try
    end repeat

    -- Удаляем временные файлы после закрытия окна
    do shell script "rm -rf " &amp; quoted form of tempDir

    return input
end run</string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.Automator.RunScript</string>
				<key>CFBundleVersion</key>
				<string>1.0.2</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunScriptAction</string>
				<key>InputUUID</key>
				<string>DFEF61DC-93C7-41C5-8E68-813097AB42E6</string>
				<key>Keywords</key>
				<array>
					<string>Запустить</string>
				</array>
				<key>OutputUUID</key>
				<string>EA72F147-604B-4B24-B9AF-FD560A167356</string>
				<key>UUID</key>
				<string>A85F3990-14DF-4B20-9310-AE5C01259AB1</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<string>on run {input, parameters}
	
	(* Your script goes here *)
	
	return input
end run</string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>456.500000:368.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run AppleScript.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleID</key>
		<string>com.apple.finder</string>
		<key>applicationBundleIDsByPath</key>
		<dict>
			<key>/System/Library/CoreServices/Finder.app</key>
			<string>com.apple.finder</string>
		</dict>
		<key>applicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>applicationPaths</key>
		<array>
			<string>/System/Library/CoreServices/Finder.app</string>
		</array>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceApplicationBundleID</key>
		<string>com.apple.finder</string>
		<key>serviceApplicationPath</key>
		<string>/System/Library/CoreServices/Finder.app</string>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSTouchBarFolder</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
